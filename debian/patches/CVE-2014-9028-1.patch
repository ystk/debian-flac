#! /bin/sh /usr/share/dpatch/dpatch-run
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: From fcf0ba06ae12ccd7c67cee3c8d948df15f946b85 Mon Sep 17 00:00:00 2001
## DP: From: Erik de Castro Lopo <erikd@mega-nerd.com>
## DP: Date: Wed, 19 Nov 2014 19:35:59 -0800
## DP: Subject: [PATCH] src/libFACL/stream_decoder.c : Fail safely to avoid a heap overflow.
## DP: 
## DP: A file provided by the reporters caused the stream decoder to write to
## DP: un-allocated heap space resulting in a segfault. The solution is to
## DP: error out (by returning false from read_residual_partitioned_rice_())
## DP: instead of trying to continue to decode.
## DP: 
## DP: Fixes: CVE-2014-9028
## DP: Reported-by: Michele Spagnuolo,
## DP:              Google Security Team <mikispag@google.com>
## DP: ---
## DP:  src/libFLAC/stream_decoder.c |    3 ++-
## DP:  1 files changed, 2 insertions(+), 1 deletions(-)
##
@DPATCH@
diff -urNad a/src/libFLAC/stream_decoder.c b/src/libFLAC/stream_decoder.c
--- a/src/libFLAC/stream_decoder.c
+++ b/src/libFLAC/stream_decoder.c
@@ -2730,7 +2730,8 @@
 		if(decoder->private_->frame.header.blocksize < predictor_order) {
 			send_error_to_client_(decoder, FLAC__STREAM_DECODER_ERROR_STATUS_LOST_SYNC);
 			decoder->protected_->state = FLAC__STREAM_DECODER_SEARCH_FOR_FRAME_SYNC;
-			return true;
+			/* We have received a potentially malicious bt stream. All we can do is error out to avoid a heap overflow. */
+			return false;
 		}
 	}
 	else {
